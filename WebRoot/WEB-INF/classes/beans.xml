<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd         
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
 
  <bean id="userDao" class="com.szl.dao.impl.UserDaoImpl">
       <property name="hibernateTemplate">
           <ref bean="hibernateTemplate"/>
       </property>
     </bean>  
	   
     <bean id="userService" class="com.szl.service.impl.UserServiceImpl">
        <property name="userDao">
           <ref bean="userDao"/>
       </property>      
     </bean>
    
     <bean id="UserManagerAction" class="com.szl.action.UserManagerAction">
       <property name="userService">
           <ref bean="userService"/>
       </property>
     </bean>
         <bean id="UserLoginAction" class="com.szl.action.UserLoginAction">
       <property name="userService">
           <ref bean="userService"/>
       </property>
     </bean>
    
     <bean id="managerDao" class="com.szl.dao.impl.ManagerDaoImpl">
       <property name="hibernateTemplate">
           <ref bean="hibernateTemplate"/>
       </property>
     </bean>  
 
     <bean id="managerService" class="com.szl.service.impl.ManagerServiceImpl">
        <property name="managerDao">
           <ref bean="managerDao"/>
       </property>      
     </bean>
    <bean id="ManagerLoginAction" class="com.szl.action.ManagerLoginAction">
       <property name="managerService">
           <ref bean="managerService"/>
       </property>
     </bean>
    
     <bean id="ManagerAction" class="com.szl.action.ManagerAction">
       <property name="managerService">
           <ref bean="managerService"/>
       </property>
     </bean>
    
      <bean id="roomDao" class="com.szl.dao.impl.RoomDaoImpl">
       <property name="hibernateTemplate">
           <ref bean="hibernateTemplate"/>
       </property>
     </bean>  
	   
     <bean id="roomService" class="com.szl.service.impl.RoomServiceImpl">
        <property name="roomDao">
           <ref bean="roomDao"/>
       </property>      
     </bean>
     <bean id="RoomAction" class="com.szl.action.RoomAction">
       <property name="roomService">
           <ref bean="roomService"/>
       </property>
     </bean>
     <bean id="IndexAction" class="com.szl.action.IndexAction">
       <property name="roomService">
           <ref bean="roomService"/>
       </property>
     </bean>
<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations">
        <value>classpath:jdbc.properties</value>
    </property>
</bean>

<bean id="dataSource" destroy-method="close"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName"
			value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
</bean>

<!--该bean用来产生sessionFactory-->
 <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
<!--   将dataSource的bean注入给该类的setDataSource方法 -->
    <property name="dataSource" ref="dataSource"/>
  <!--  用来设置那些类用到Hibernate的注解 注入到setAnnotatedClasses方法中 -->
    <property name="packagesToScan">
      <list>
        <value>com.szl.model</value>
      </list>
    </property>
<!--  设置Hibernate的属性到setHibernateProperties方法中  -->
    <property name="hibernateProperties">
     <props>
        <prop key="hibernate.dialect">org.hibernate.dialect.OracleDialect</prop>
        <prop key="hibernate.show_sql">true</prop>
    </props>
    </property>
  </bean>
<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate" >
<property name="sessionFactory" ref="sessionFactory"></property>
</bean>

<!--使用Spring的事务管理时必须引入-->
<!--把sessionFactory交给txManager-->
 <bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
  <property name="sessionFactory" ref="sessionFactory" />
</bean>
<!--表示使用Annotation的方式进行事物管理-->
<!--<tx:annotation-driven transaction-manager="txManager"/>-->
<!--使用xml的方式进行事物管理-->
<aop:config>
    <aop:pointcut id="serviceOperation"
          expression="execution(public * com.szl.service..*.*(..))"/>
    <aop:advisor pointcut-ref="serviceOperation" advice-ref="txAdvice"/>
  </aop:config>
 <tx:advice id="txAdvice" transaction-manager="txManager">
  <!-- the transactional semantics... -->
  <tx:attributes>
    <tx:method name="get*" read-only="true"/>
	<tx:method name="find*" read-only="true"/>
	<tx:method name="*"/>
  </tx:attributes>
  </tx:advice>
 
 

</beans>